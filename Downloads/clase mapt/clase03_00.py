# ===============================================================
# CLASE 2 y 3 - EJERCITARIO COMPLETO DE VISUALIZACI√ìN BIVARIADA
# Dataset: Financial Sample (Kaggle)
# Profesora: Graciela Lezcano
# ===============================================================

# ---------------------------------------------------------------
# 1. IMPORTACI√ìN DE LIBRER√çAS
# ---------------------------------------------------------------
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Configuraci√≥n est√©tica de Seaborn
sns.set(style="whitegrid", palette="pastel")

# ---------------------------------------------------------------
# 2. CARGAR EL DATASET
# ---------------------------------------------------------------
df = pd.read_excel("Financial Sample.xlsx")

print("‚úÖ Dataset cargado correctamente.")
print(df.head())

# ---------------------------------------------------------------
# 3. AN√ÅLISIS PRELIMINAR
# ---------------------------------------------------------------
print("\nInformaci√≥n general del dataset:")
print(df.info())
print("\nEstad√≠sticas b√°sicas:")
print(df.describe())

# Eliminamos filas con valores nulos si las hay
df = df.dropna()

# ---------------------------------------------------------------
# 4. REPASO DE MATPLOTLIB - GR√ÅFICOS SIMPLES
# ---------------------------------------------------------------
# L√≠nea: tendencia de ventas por a√±o
ventas_anuales = df.groupby("Year")["Sales"].sum()

plt.figure(figsize=(8,5))
plt.plot(ventas_anuales.index, ventas_anuales.values, marker="o")
plt.title("Tendencia de Ventas por A√±o")
plt.xlabel("A√±o")
plt.ylabel("Ventas ($)")
plt.grid(True)
plt.show()

# Barras: comparaci√≥n de ventas por segmento
ventas_segmento = df.groupby("Segment")["Sales"].sum().sort_values(ascending=False)

plt.figure(figsize=(7,5))
ventas_segmento.plot(kind="bar", color="skyblue")
plt.title("Ventas Totales por Segmento")
plt.xlabel("Segmento")
plt.ylabel("Ventas ($)")
plt.show()

# ---------------------------------------------------------------
# 5. SEABORN ‚Äì SCATTERPLOT B√ÅSICO
# ---------------------------------------------------------------
plt.figure(figsize=(8,5))
sns.scatterplot(x="Sales", y="Profit", data=df)
plt.title("Relaci√≥n entre Ventas y Ganancias")
plt.xlabel("Ventas ($)")
plt.ylabel("Ganancia ($)")
plt.show()

# üí¨ COMENTARIO:
# Si los puntos suben hacia la derecha, hay correlaci√≥n positiva.
# Si bajan, correlaci√≥n negativa. Si est√°n dispersos, no hay relaci√≥n.

# ---------------------------------------------------------------
# 6. SCATTERPLOT CON HUE (TERCERA VARIABLE)
# ---------------------------------------------------------------
plt.figure(figsize=(8,5))
sns.scatterplot(x="Sales", y="Profit", hue="Segment", data=df)
plt.title("Relaci√≥n Ventas-Ganancias por Segmento")
plt.show()

# üí¨ COMENTARIO:
# El color diferencia categor√≠as. Vemos si un grupo tiene m√°rgenes m√°s altos.

# ---------------------------------------------------------------
# 7. SCATTERPLOT CON ESTILO Y TAMA√ëO
# ---------------------------------------------------------------
plt.figure(figsize=(8,5))
sns.scatterplot(x="Sales", y="Profit", hue="Segment", style="Country", size="Discount Band", data=df)
plt.title("Gr√°fico con hue, estilo y tama√±o")
plt.show()

# üí¨ COMENTARIO:
# Se pueden combinar m√∫ltiples variables visualmente para entender patrones m√°s complejos.

# ---------------------------------------------------------------
# 8. BOXPLOT ‚Äì DISTRIBUCI√ìN DE PROFIT POR SEGMENTO
# ---------------------------------------------------------------
plt.figure(figsize=(8,5))
sns.boxplot(x="Segment", y="Profit", data=df)
plt.title("Distribuci√≥n de Ganancia por Segmento")
plt.show()

# üí¨ COMENTARIO:
# El boxplot muestra mediana, cuartiles y outliers (valores at√≠picos).

# ---------------------------------------------------------------
# 9. VIOLINPLOT ‚Äì DISTRIBUCI√ìN DETALLADA
# ---------------------------------------------------------------
plt.figure(figsize=(8,5))
sns.violinplot(x="Segment", y="Profit", data=df, inner="quartile")
plt.title("Distribuci√≥n de Ganancia (Viol√≠n)")
plt.show()

# üí¨ COMENTARIO:
# Muestra densidad de los datos. Las partes m√°s anchas indican donde se concentran los valores.

# ---------------------------------------------------------------
# 10. BARPLOT ‚Äì COMPARACI√ìN DE PROMEDIOS
# ---------------------------------------------------------------
plt.figure(figsize=(8,5))
sns.barplot(x="Segment", y="Sales", data=df, estimator=sum, ci=None)
plt.title("Ventas Totales por Segmento")
plt.show()

# üí¨ COMENTARIO:
# Barplot puede mostrar sumas o promedios, seg√∫n el par√°metro 'estimator'.

# ---------------------------------------------------------------
# 11. M√öLTIPLES GR√ÅFICOS CON FACETGRID
# ---------------------------------------------------------------
# Queremos comparar la relaci√≥n entre Sales y Profit, pero por pa√≠s.
# ---------------------------------------------------------------
g = sns.FacetGrid(df, col="Country", col_wrap=3, height=4)
g.map(sns.scatterplot, "Sales", "Profit")
g.fig.suptitle("Relaci√≥n Ventas-Ganancia por Pa√≠s", y=1.02)
plt.show()

# üí¨ COMENTARIO:
# FacetGrid permite crear una grilla de gr√°ficos por categor√≠a.

# ---------------------------------------------------------------
# 12. HEATMAP DE CORRELACI√ìN
# ---------------------------------------------------------------
plt.figure(figsize=(8,5))
sns.heatmap(df.corr(numeric_only=True), annot=True, cmap="coolwarm", fmt=".2f")
plt.title("Mapa de Calor - Correlaciones")
plt.show()

# üí¨ COMENTARIO:
# Colores c√°lidos = correlaci√≥n positiva fuerte.
# Colores fr√≠os = correlaci√≥n negativa.

# ---------------------------------------------------------------
# 13. EJEMPLO DE CORRELACI√ìN NUM√âRICA
# ---------------------------------------------------------------
corr_sales_profit = df["Sales"].corr(df["Profit"])
print(f"üîπ Correlaci√≥n entre Ventas y Ganancias: {corr_sales_profit:.2f}")

# üí¨ COMENTARIO:
# Valores cercanos a 1 indican correlaci√≥n fuerte positiva.
# Cercanos a -1, fuerte negativa. Cercanos a 0, sin relaci√≥n.

# ---------------------------------------------------------------
# 14. MINI DESAF√çOS PARA LOS ALUMNOS üí°
# ---------------------------------------------------------------
print("\nüí° DESAF√çOS:")
print("1Ô∏è‚É£ Crear un scatterplot de 'Units Sold' vs 'COGS'.")
print("2Ô∏è‚É£ Usar hue='Country' y style='Segment'.")
print("3Ô∏è‚É£ Hacer un boxplot del campo 'Profit' por 'Country'.")
print("4Ô∏è‚É£ Crear un heatmap s√≥lo de columnas num√©ricas seleccionadas.")
print("5Ô∏è‚É£ Explicar qu√© relaci√≥n observan en los gr√°ficos.")

# ---------------------------------------------------------------
# 15. EXTRA: PALETA DE COLORES PERSONALIZADA
# ---------------------------------------------------------------
plt.figure(figsize=(8,5))
sns.boxplot(x="Segment", y="Profit", data=df, palette="Set2")
plt.title("Boxplot con paleta personalizada")
plt.show()

# ---------------------------------------------------------------
# 16. EXTRA: RELACI√ìN ENTRE VARIABLES CON REGRESI√ìN LINEAL
# ---------------------------------------------------------------
plt.figure(figsize=(8,5))
sns.lmplot(x="Sales", y="Profit", data=df, height=5, aspect=1.3, line_kws={'color':'red'})
plt.title("Regresi√≥n lineal: Ventas vs Ganancias")
plt.show()

# üí¨ COMENTARIO:
# lmplot agrega una l√≠nea de tendencia autom√°ticamente,
# √∫til para visualizar la direcci√≥n de la correlaci√≥n.
